<!DOCTYPE HTML>
<html>

<head>
  <meta charset="UTF-8">
  <title>iXmaps UI</title>
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="keywords" content="ixmaps interactive map interface ui">
  <meta name="description" content="ixmaps map interface dispatcher">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"> 
  <link rel="shortcut icon" href="./resources/images/ixmaps_logo.png" >
</head>

<body class="splash" style="margin:0;overflow:hidden;">
</body>

  <script src = "../ui/libs/jquery/jquery-1.7.1.min.js"></script>
  <script src = "../ui/libs/getUrlParam/js/jquery.getUrlParam.js"></script>

  <script src = "../ui/js/htmlgui_api.js" ></script>
  <script src = "./dispatch.js" ></script>

  <script type="text/javascript">

	$.extend({
	  getUrlVars: function(){
		var vars = [], hash;
		var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
		for(var i = 0; i < hashes.length; i++)
		{
		  hash = hashes[i].split('=');
		  vars[hash[0]] = hash[1];
		}
		return vars;
	  },
	  getUrlVar: function(name){
		return $.getUrlVars()[name];
	  }
	});

	var uiList = {"ui": [
					 { "type":"full",	"service":"ll",	"url": "../ui/html/main_sync_Mapstraction_jquery.html?mapservice=leaflet" }
					,{ "type":"full",	"service":"bg",	"url": "../ui/html/main_sync_Mapstraction_jquery.html?mapservice=microsoft" }
					,{ "type":"full",	"service":"ol", "url": "../ui/html/main_sync_Mapstraction_jquery.html?mapservice=openlayers" }
					,{ "type":"full",	"service":"go",	"url": "../ui/html/main_sync_GoogleV3_jquery.html?" }

					,{ "type":"story",	"service":"ll",	"url": "../ui/html/main_sync_story_frame.html?basemap=leaflet" }
					,{ "type":"story",	"service":"bg",	"url": "../ui/html/main_sync_story_drame.html?basemap=microsoft" }
					,{ "type":"story",	"service":"ol", "url": "../ui/html/main_sync_story_frame.html?basemap=openlayers" }
					,{ "type":"story",	"service":"go",	"url": "../ui/html/main_sync_story_frame.html?" }
		
					,{ "type":"story",	"service":"leaflet",	"url": "../ui/html/main_sync_story_frame.html?basemap=leaflet" }
					,{ "type":"story",	"service":"leaflet_vt",	"url": "../ui/html/main_sync_story_frame.html?basemap=leaflet_vt" }

					,{ "type":"embed",	"service":"ll",	"url": "../ui/html/embed_sync_Leaflet.html?mapservice=leaflet" }
					,{ "type":"embed",	"service":"lv",	"url": "../ui/html/embed_sync_Leaflet_VT.html?mapservice=leaflet" }
					,{ "type":"embed",	"service":"bg",	"url": "../ui/html/embed_sync_Mapstraction.html?mapservice=microsoft" }
					,{ "type":"embed",	"service":"ol", "url": "../ui/html/embed_sync_Mapstraction.html?mapservice=openlayers" }
					,{ "type":"embed",	"service":"go",	"url": "../ui/html/embed_sync_GoogleV3.html?" }

					,{ "type":"embed",	"service":"leaflet",   "url": "../ui/html/embed_sync_Leaflet.html?mapservice=leaflet" }
					,{ "type":"embed",	"service":"leaflet_vt","url": "../ui/html/embed_sync_Leaflet_VT.html?mapservice=leaflet" }
					,{ "type":"embed",	"service":"google",	   "url": "../ui/html/embed_sync_GoogleV3.html?mapservice=leaflet" }

					,{ "type":"mobile",	"service":"ll",	"url": "../ui/html/mobile_sync_Mapstraction.html?mapservice=leaflet" }
					,{ "type":"mobile",	"service":"bg",	"url": "../ui/html/mobile_sync_Mapstraction.html?mapservice=microsoft" }
					,{ "type":"mobile",	"service":"ol", "url": "../ui/html/mobile_sync_Mapstraction.html?mapservice=openlayers" }
					,{ "type":"mobile",	"service":"go",	"url": "../ui/html/mobile_sync_GoogleV3.html?" }

					,{ "type":"fullmo",	"service":"ll",	"url": "../ui/html/mobile_sync_story.html?mapservice=leaflet" }
					,{ "type":"fullmo",	"service":"bg",	"url": "../ui/html/mobile_sync_story.html?mapservice=microsoft" }
					,{ "type":"fullmo",	"service":"ol", "url": "../ui/html/mobile_sync_story.html?mapservice=openlayers" }
					,{ "type":"fullmo",	"service":"go",	"url": "../ui/html/mobile_sync_story.html?" }

					,{ "type":"popout",	"service":"ll", "url": "../ui/html/popout_sync_Mapstraction.html?mapservice=leaflet" }
					,{ "type":"popout",	"service":"bg", "url": "../ui/html/popout_sync_Mapstraction.html?mapservice=microsoft" }
					,{ "type":"popout",	"service":"ol", "url": "../ui/html/popout_sync_Mapstraction.html?mapservice=openlayers" }
					,{ "type":"popout",	"service":"go",	"url": "../ui/html/popout_sync_GoogleV3.html?" }

					,{ "type":"edit",	"service":"ll", "url": "../app/Editor/index.html?mapservice=leaflet" }
					,{ "type":"edit",	"service":"bg", "url": "../app/Editor/index.html?mapservice=microsoft" }
					,{ "type":"edit",	"service":"ol", "url": "../app/Editor/index.html?mapservice=openlayers" }
					,{ "type":"edit",	"service":"go",	"url": "../app/Editor/index.html?" }
					
					,{ "type":"view",	"service":"ll", "url": "../app/Viewer/index.html?mapservice=leaflet" }
					,{ "type":"view",	"service":"bg", "url": "../app/Viewer/index.html?mapservice=microsoft" }
					,{ "type":"view",	"service":"ol", "url": "../app/Viewer/index.html?mapservice=openlayers" }
					,{ "type":"view",	"service":"go",	"url": "../app/Viewer/index.html?" }
					
					,{ "type":"pview",	"service":"ll", "url": "../app/ProjectV/index.html?mapservice=leaflet" }
					,{ "type":"pview",	"service":"bg", "url": "../app/ProjectV/index.html?mapservice=microsoft" }
					,{ "type":"pview",	"service":"ol", "url": "../app/ProjectV/index.html?mapservice=openlayers" }
					,{ "type":"pview",	"service":"go",	"url": "../app/ProjectV/index.html?" }
					
					]
				 };

	var serviceA = new Array();
	serviceA["google"] = "go";
	serviceA["Google"] = "go";
	serviceA["bing"] = "bg";
	serviceA["Bing"] = "bg";
	serviceA["Microsoft"] = "bg";
	serviceA["microsoft"] = "bg";
	serviceA["OpenLayers"] = "ol";
	serviceA["Open Layers"] = "ol";
	serviceA["openlayers"] = "ol";
	serviceA["open layers"] = "ol";
	serviceA["leaflet"] = "leaflet";
	serviceA["Leaflet"] = "leaflet";
	serviceA["leaflet_vt"] = "leaflet_vt";
	serviceA["Leaflet_vt"] = "leaflet_vt";
	serviceA["bg"] = "bg";
	serviceA["ol"] = "ol";
	serviceA["ll"] = "ll";
	serviceA["lv"] = "lv";
	serviceA[""] = "go";

    $(document).ready(function() {
		
		$(".splash").css("background-image","url('./resources/images/loading_blue.gif')");
		$(".splash").css("background-position","50% 48%");
		$(".splash").css("background-repeat","no-repeat");
		$(".splash").css("background-color","rgba(255,255,255,1)");
		
		var szName = $(document).getUrlParam('name')||"map";
		
		// register the embedded map,
		// with the name given in the query params
		// this is important to access the map from within the calling window

		if ( ixmaps.parentApi && ixmaps.parentApi.registerApi ){
			ixmaps.parentApi.registerApi(ixmaps,szName,window);
		}

		// get parameter to foreward
		var szParams = "";
		var allVars = $.getUrlVars();
		for ( a in allVars ){
			if ( a != "ui"	    && 
				 a != "mapid"   &&
				 a != "svgmap"  &&
				 a != "basemap"    ){
				 szParams += ("&" + a + '=' + allVars[a] );
			}
		}

		// get parameter to interpret
		var ui =		$(document).getUrlParam('ui');
		var service =   $(document).getUrlParam('basemap');
		var mapid =		$(document).getUrlParam('mapid');
		var svgmap =	$(document).getUrlParam('svgmap');

		// default: no map
		var szMap = "";

		// test if map is given by svgmap parameter
		// see if absolute or relative path
		// if not, make prefix
		if ( svgmap ){
			if( svgmap.match(/\.\./) || svgmap.match(/\.\//) ){
				szMap = "&svggis="+svgmap;
			}else{
				if ( ixmaps.dispatch.svgRoot ){
					szMap = "&svggis=" + ixmaps.dispatch.svgRoot + svgmap;
				}else{
					szMap = "&svggis=../../maps/svg/maps/" + svgmap;
					}
			}
		}
			
		// translate service names
		service = serviceA[service]?serviceA[service]:"ll";

		if ( ui == "popout" ){
			ui = "embed";
			}

		// dispatch to the ui templates
		var uiurl = "../ui/html/embed_sync_Leaflet.html?";
		for ( i=0; i<uiList.ui.length;i++ ){
			if ( service == uiList.ui[i].service && ui == uiList.ui[i].type ){
				uiurl = uiList.ui[i].url;
				break;
			}
		}

		// on touch devices, redirect full mode 
		if ( ui == "fullmo" ){
			window.location.href = uiurl + szMap + szParams;
		}

		var maxHeight = window.innerHeight;
		var maxWidth = window.innerWidth;

		// embed the template via iframe and pass the parameter
		if ( navigator.userAgent.match(/iPad/i) ){
			// on iPad height = 100% causes strange behaviour, i.e. continous grow of page height
			// so we have to set height to 99%
			$("body").html("<iframe id='"+szName+"' src=\"" + uiurl + szMap + szParams + "\" " +
						" style='width:"+maxWidth+"px;height:"+(maxHeight-5)+"px;padding:0;margin:0;border:0;overflow:hidden' />");
		}else{
			// embed the template via iframe and pass the parameter
			$("body").html("<iframe id='"+szName+"' src=\"" + uiurl + szMap + szParams + "\" " +
						" style='width:"+maxWidth+"px;height:"+maxHeight+"px;padding:0;margin:0;border:0;overflow:hidden' />");
		}
		
		if ( ui == "edit" ){
			document.title = "iXMaps editor";
		}

		$("#divloading").fadeOut(1000);

		$(window).resize(function() {
			$("#"+szName).css("width",window.innerWidth+"px");
			$("#"+szName).css("height",window.innerHeight+"px");
		});
		ixmaps.szMap = szName;

		ixmaps.fSyncMap = $(document).getUrlParam('sync') ? ($(document).getUrlParam('sync') == "true") : true;
		
		ixmaps.registerMe();

	});


  </script>

</html>

